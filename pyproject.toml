[tool.poetry]
name = "shell-gpt"
version = "0.9.4"
description = "A command-line productivity tool powered by OpenAI GPT models, will help you accomplish your tasks faster and more efficiently."
authors = ["Farkhod Sadykov <farkhod@sadykov.dev>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "sgpt" }]
keywords = ["shell", "gpt", "openai", "cli", "productivity", "cheet-sheet"]
classifiers = [
    "Operating System :: OS Independent",
    "Topic :: Software Development",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
requests = "^2.31.0"
typer = "^0.9.0"
click = "^8.1.6"
rich = "^13.5.2"
distro = "^1.8.0"
pyreadline3 = "^3.4.1"
tiktoken = "^0.4.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
requests-mock = { extras = ["fixture"], version = "^1.11.0" }
isort = "^5.12.0"
black = "^23.7.0"
mypy = "^1.4.1"
types-requests = "^2.31.0.2"
codespell = "^2.2.5"

[tool.hatch.version]
path = "sgpt/__init__.py"

[tool.hatch.build.targets.wheel]
only-include = ["sgpt"]

[tool.hatch.build.targets.sdist]
only-include = ["sgpt", "tests", "README.md", "LICENSE", "pyproject.toml"]

[tool.isort]
profile = "black"
skip = "__init__.py"

[tool.mypy]
strict = true

[tool.ruff]
select = [
    "E", # pycodestyle errors.
    "W", # pycodestyle warnings.
    "F", # pyflakes.
    "C", # flake8-comprehensions.
    "B", # flake8-bugbear.
]
ignore = [
    "E501", # line too long, handled by black.
    "C901", # too complex.
    "B008", # do not perform function calls in argument defaults.
]

[tool.codespell]
skip = '.git,venv'
# ignore-words-list = ''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
sgpt = "sgpt.app:entry_point"
